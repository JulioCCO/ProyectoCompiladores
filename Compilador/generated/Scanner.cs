//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Proyecto Compi/ProyectoCompiladores/Compilador\Scanner.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace generated {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.CLSCompliant(false)]
public partial class Scanner : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		CLASS=1, NAMESPACE=2, INTERFACE=3, ENUM=4, STRUCT=5, VOID=6, NEW=7, THIS=8, 
		BASE=9, IF=10, ELSE=11, WHILE=12, DO=13, FOR=14, FOREACH=15, IN=16, RETURN=17, 
		SWITCH=18, CASE=19, DEFAULT=20, TRY=21, CATCH=22, FINALLY=23, THROW=24, 
		THROWS=25, PRIVATE=26, PROTECTED=27, PUBLIC=28, INTERNAL=29, ABSTRACT=30, 
		VIRTUAL=31, OVERRIDE=32, STATIC=33, CONST=34, READONLY=35, GET=36, SET=37, 
		ADD=38, REMOVE=39, EVENT=40, AS=41, IS=42, NULL=43, INT_LITERAL=44, HEX_LITERAL=45, 
		FLOAT_LITERAL=46, DOUBLE_LITERAL=47, CHAR_LITERAL=48, STRING_LITERAL=49, 
		IDENTIFIER=50, PLUS=51, MINUS=52, MULTIPLY=53, DIVIDE=54, MODULO=55, ASSIGN=56, 
		PLUS_ASSIGN=57, MINUS_ASSIGN=58, MULTIPLY_ASSIGN=59, DIVIDE_ASSIGN=60, 
		MODULO_ASSIGN=61, EQUALS=62, NOT_EQUALS=63, LESS_THAN=64, GREATER_THAN=65, 
		LESS_OR_EQUALS=66, GREATER_OR_EQUALS=67, LOGICAL_AND=68, LOGICAL_OR=69, 
		LOGICAL_NOT=70, BITWISE_AND=71, BITWISE_OR=72, BITWISE_NOT=73, BITWISE_XOR=74, 
		LEFT_SHIFT=75, RIGHT_SHIFT=76, CONDITIONAL_OPERATOR=77, NULL_COALESCE_OPERATOR=78, 
		INC=79, DEC=80, DOT=81, ELLIPSIS=82, COLON=83, SEMICOLON=84, COMMA=85, 
		ARROW=86, LEFT_PAREN=87, RIGHT_PAREN=88, LEFT_BRACE=89, RIGHT_BRACE=90, 
		LEFT_SQUARE_BRACKET=91, RIGHT_SQUARE_BRACKET=92;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"CLASS", "NAMESPACE", "INTERFACE", "ENUM", "STRUCT", "VOID", "NEW", "THIS", 
		"BASE", "IF", "ELSE", "WHILE", "DO", "FOR", "FOREACH", "IN", "RETURN", 
		"SWITCH", "CASE", "DEFAULT", "TRY", "CATCH", "FINALLY", "THROW", "THROWS", 
		"PRIVATE", "PROTECTED", "PUBLIC", "INTERNAL", "ABSTRACT", "VIRTUAL", "OVERRIDE", 
		"STATIC", "CONST", "READONLY", "GET", "SET", "ADD", "REMOVE", "EVENT", 
		"AS", "IS", "NULL", "INT_LITERAL", "HEX_LITERAL", "FLOAT_LITERAL", "DOUBLE_LITERAL", 
		"CHAR_LITERAL", "STRING_LITERAL", "DIGIT", "HEX_DIGIT", "EXPONENT", "ESCAPE_SEQUENCE", 
		"UNICODE_ESCAPE", "IDENTIFIER", "LETTER", "PLUS", "MINUS", "MULTIPLY", 
		"DIVIDE", "MODULO", "ASSIGN", "PLUS_ASSIGN", "MINUS_ASSIGN", "MULTIPLY_ASSIGN", 
		"DIVIDE_ASSIGN", "MODULO_ASSIGN", "EQUALS", "NOT_EQUALS", "LESS_THAN", 
		"GREATER_THAN", "LESS_OR_EQUALS", "GREATER_OR_EQUALS", "LOGICAL_AND", 
		"LOGICAL_OR", "LOGICAL_NOT", "BITWISE_AND", "BITWISE_OR", "BITWISE_NOT", 
		"BITWISE_XOR", "LEFT_SHIFT", "RIGHT_SHIFT", "CONDITIONAL_OPERATOR", "NULL_COALESCE_OPERATOR", 
		"INC", "DEC", "DOT", "ELLIPSIS", "COLON", "SEMICOLON", "COMMA", "ARROW", 
		"LEFT_PAREN", "RIGHT_PAREN", "LEFT_BRACE", "RIGHT_BRACE", "LEFT_SQUARE_BRACKET", 
		"RIGHT_SQUARE_BRACKET"
	};


	public Scanner(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Scanner(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'class'", "'namespace'", "'interface'", "'enum'", "'struct'", "'void'", 
		"'new'", "'this'", "'base'", "'if'", "'else'", "'while'", "'do'", "'for'", 
		"'foreach'", "'in'", "'return'", "'switch'", "'case'", "'default'", "'try'", 
		"'catch'", "'finally'", "'throw'", "'throws'", "'private'", "'protected'", 
		"'public'", "'internal'", "'abstract'", "'virtual'", "'override'", "'static'", 
		"'const'", "'readonly'", "'get'", "'set'", "'add'", "'remove'", "'event'", 
		"'as'", "'is'", "'null'", null, null, null, null, null, null, null, "'+'", 
		"'-'", "'*'", "'/'", "'%'", "'='", "'+='", "'-='", "'*='", "'/='", "'%='", 
		"'=='", "'!='", "'<'", "'>'", "'<='", "'>='", "'&&'", "'||'", "'!'", "'&'", 
		"'|'", "'~'", "'^'", "'<<'", "'>>'", "'?'", "'??'", "'++'", "'--'", "'.'", 
		"'...'", "':'", "';'", "','", "'->'", "'('", "')'", "'{'", "'}'", "'['", 
		"']'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "CLASS", "NAMESPACE", "INTERFACE", "ENUM", "STRUCT", "VOID", "NEW", 
		"THIS", "BASE", "IF", "ELSE", "WHILE", "DO", "FOR", "FOREACH", "IN", "RETURN", 
		"SWITCH", "CASE", "DEFAULT", "TRY", "CATCH", "FINALLY", "THROW", "THROWS", 
		"PRIVATE", "PROTECTED", "PUBLIC", "INTERNAL", "ABSTRACT", "VIRTUAL", "OVERRIDE", 
		"STATIC", "CONST", "READONLY", "GET", "SET", "ADD", "REMOVE", "EVENT", 
		"AS", "IS", "NULL", "INT_LITERAL", "HEX_LITERAL", "FLOAT_LITERAL", "DOUBLE_LITERAL", 
		"CHAR_LITERAL", "STRING_LITERAL", "IDENTIFIER", "PLUS", "MINUS", "MULTIPLY", 
		"DIVIDE", "MODULO", "ASSIGN", "PLUS_ASSIGN", "MINUS_ASSIGN", "MULTIPLY_ASSIGN", 
		"DIVIDE_ASSIGN", "MODULO_ASSIGN", "EQUALS", "NOT_EQUALS", "LESS_THAN", 
		"GREATER_THAN", "LESS_OR_EQUALS", "GREATER_OR_EQUALS", "LOGICAL_AND", 
		"LOGICAL_OR", "LOGICAL_NOT", "BITWISE_AND", "BITWISE_OR", "BITWISE_NOT", 
		"BITWISE_XOR", "LEFT_SHIFT", "RIGHT_SHIFT", "CONDITIONAL_OPERATOR", "NULL_COALESCE_OPERATOR", 
		"INC", "DEC", "DOT", "ELLIPSIS", "COLON", "SEMICOLON", "COMMA", "ARROW", 
		"LEFT_PAREN", "RIGHT_PAREN", "LEFT_BRACE", "RIGHT_BRACE", "LEFT_SQUARE_BRACKET", 
		"RIGHT_SQUARE_BRACKET"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Scanner.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static Scanner() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,92,662,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,1,0,1,
		0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,
		1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,
		4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,
		1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,
		11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,
		14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,
		17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,
		19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,
		21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,
		23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,
		25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,
		27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,
		29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,
		30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,
		32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,
		34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,
		37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,
		39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,
		43,4,43,464,8,43,11,43,12,43,465,1,44,1,44,1,44,1,44,4,44,472,8,44,11,
		44,12,44,473,1,45,4,45,477,8,45,11,45,12,45,478,1,45,1,45,5,45,483,8,45,
		10,45,12,45,486,9,45,1,45,3,45,489,8,45,1,46,4,46,492,8,46,11,46,12,46,
		493,1,46,1,46,5,46,498,8,46,10,46,12,46,501,9,46,1,46,3,46,504,8,46,1,
		47,1,47,1,47,3,47,509,8,47,1,47,1,47,1,48,1,48,1,48,5,48,516,8,48,10,48,
		12,48,519,9,48,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,3,51,529,8,51,1,
		51,4,51,532,8,51,11,51,12,51,533,1,52,1,52,1,52,3,52,539,8,52,1,53,1,53,
		1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,5,54,552,8,54,10,54,12,54,
		555,9,54,1,55,3,55,558,8,55,1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,59,1,
		60,1,60,1,61,1,61,1,62,1,62,1,62,1,63,1,63,1,63,1,64,1,64,1,64,1,65,1,
		65,1,65,1,66,1,66,1,66,1,67,1,67,1,67,1,68,1,68,1,68,1,69,1,69,1,70,1,
		70,1,71,1,71,1,71,1,72,1,72,1,72,1,73,1,73,1,73,1,74,1,74,1,74,1,75,1,
		75,1,76,1,76,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,80,1,81,1,81,1,
		81,1,82,1,82,1,83,1,83,1,83,1,84,1,84,1,84,1,85,1,85,1,85,1,86,1,86,1,
		87,1,87,1,87,1,87,1,88,1,88,1,89,1,89,1,90,1,90,1,91,1,91,1,91,1,92,1,
		92,1,93,1,93,1,94,1,94,1,95,1,95,1,96,1,96,1,97,1,97,0,0,98,1,1,3,2,5,
		3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
		33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
		57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
		81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,0,101,0,103,0,
		105,0,107,0,109,50,111,0,113,51,115,52,117,53,119,54,121,55,123,56,125,
		57,127,58,129,59,131,60,133,61,135,62,137,63,139,64,141,65,143,66,145,
		67,147,68,149,69,151,70,153,71,155,72,157,73,159,74,161,75,163,76,165,
		77,167,78,169,79,171,80,173,81,175,82,177,83,179,84,181,85,183,86,185,
		87,187,88,189,89,191,90,193,91,195,92,1,0,8,2,0,39,39,92,92,2,0,34,34,
		92,92,1,0,48,57,3,0,48,57,65,70,97,102,2,0,69,69,101,101,2,0,43,43,45,
		45,8,0,34,34,39,39,92,92,98,98,102,102,110,110,114,114,116,116,5,0,65,
		90,97,122,192,214,216,246,248,255,672,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,
		0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
		1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
		0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
		1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,
		0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
		1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,
		0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
		1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,
		0,0,95,1,0,0,0,0,97,1,0,0,0,0,109,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,
		0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,
		0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,
		0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,
		0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,
		0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,
		0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,
		0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,
		0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,
		1,197,1,0,0,0,3,203,1,0,0,0,5,213,1,0,0,0,7,223,1,0,0,0,9,228,1,0,0,0,
		11,235,1,0,0,0,13,240,1,0,0,0,15,244,1,0,0,0,17,249,1,0,0,0,19,254,1,0,
		0,0,21,257,1,0,0,0,23,262,1,0,0,0,25,268,1,0,0,0,27,271,1,0,0,0,29,275,
		1,0,0,0,31,283,1,0,0,0,33,286,1,0,0,0,35,293,1,0,0,0,37,300,1,0,0,0,39,
		305,1,0,0,0,41,313,1,0,0,0,43,317,1,0,0,0,45,323,1,0,0,0,47,331,1,0,0,
		0,49,337,1,0,0,0,51,344,1,0,0,0,53,352,1,0,0,0,55,362,1,0,0,0,57,369,1,
		0,0,0,59,378,1,0,0,0,61,387,1,0,0,0,63,395,1,0,0,0,65,404,1,0,0,0,67,411,
		1,0,0,0,69,417,1,0,0,0,71,426,1,0,0,0,73,430,1,0,0,0,75,434,1,0,0,0,77,
		438,1,0,0,0,79,445,1,0,0,0,81,451,1,0,0,0,83,454,1,0,0,0,85,457,1,0,0,
		0,87,463,1,0,0,0,89,467,1,0,0,0,91,476,1,0,0,0,93,491,1,0,0,0,95,505,1,
		0,0,0,97,512,1,0,0,0,99,522,1,0,0,0,101,524,1,0,0,0,103,526,1,0,0,0,105,
		538,1,0,0,0,107,540,1,0,0,0,109,547,1,0,0,0,111,557,1,0,0,0,113,559,1,
		0,0,0,115,561,1,0,0,0,117,563,1,0,0,0,119,565,1,0,0,0,121,567,1,0,0,0,
		123,569,1,0,0,0,125,571,1,0,0,0,127,574,1,0,0,0,129,577,1,0,0,0,131,580,
		1,0,0,0,133,583,1,0,0,0,135,586,1,0,0,0,137,589,1,0,0,0,139,592,1,0,0,
		0,141,594,1,0,0,0,143,596,1,0,0,0,145,599,1,0,0,0,147,602,1,0,0,0,149,
		605,1,0,0,0,151,608,1,0,0,0,153,610,1,0,0,0,155,612,1,0,0,0,157,614,1,
		0,0,0,159,616,1,0,0,0,161,618,1,0,0,0,163,621,1,0,0,0,165,624,1,0,0,0,
		167,626,1,0,0,0,169,629,1,0,0,0,171,632,1,0,0,0,173,635,1,0,0,0,175,637,
		1,0,0,0,177,641,1,0,0,0,179,643,1,0,0,0,181,645,1,0,0,0,183,647,1,0,0,
		0,185,650,1,0,0,0,187,652,1,0,0,0,189,654,1,0,0,0,191,656,1,0,0,0,193,
		658,1,0,0,0,195,660,1,0,0,0,197,198,5,99,0,0,198,199,5,108,0,0,199,200,
		5,97,0,0,200,201,5,115,0,0,201,202,5,115,0,0,202,2,1,0,0,0,203,204,5,110,
		0,0,204,205,5,97,0,0,205,206,5,109,0,0,206,207,5,101,0,0,207,208,5,115,
		0,0,208,209,5,112,0,0,209,210,5,97,0,0,210,211,5,99,0,0,211,212,5,101,
		0,0,212,4,1,0,0,0,213,214,5,105,0,0,214,215,5,110,0,0,215,216,5,116,0,
		0,216,217,5,101,0,0,217,218,5,114,0,0,218,219,5,102,0,0,219,220,5,97,0,
		0,220,221,5,99,0,0,221,222,5,101,0,0,222,6,1,0,0,0,223,224,5,101,0,0,224,
		225,5,110,0,0,225,226,5,117,0,0,226,227,5,109,0,0,227,8,1,0,0,0,228,229,
		5,115,0,0,229,230,5,116,0,0,230,231,5,114,0,0,231,232,5,117,0,0,232,233,
		5,99,0,0,233,234,5,116,0,0,234,10,1,0,0,0,235,236,5,118,0,0,236,237,5,
		111,0,0,237,238,5,105,0,0,238,239,5,100,0,0,239,12,1,0,0,0,240,241,5,110,
		0,0,241,242,5,101,0,0,242,243,5,119,0,0,243,14,1,0,0,0,244,245,5,116,0,
		0,245,246,5,104,0,0,246,247,5,105,0,0,247,248,5,115,0,0,248,16,1,0,0,0,
		249,250,5,98,0,0,250,251,5,97,0,0,251,252,5,115,0,0,252,253,5,101,0,0,
		253,18,1,0,0,0,254,255,5,105,0,0,255,256,5,102,0,0,256,20,1,0,0,0,257,
		258,5,101,0,0,258,259,5,108,0,0,259,260,5,115,0,0,260,261,5,101,0,0,261,
		22,1,0,0,0,262,263,5,119,0,0,263,264,5,104,0,0,264,265,5,105,0,0,265,266,
		5,108,0,0,266,267,5,101,0,0,267,24,1,0,0,0,268,269,5,100,0,0,269,270,5,
		111,0,0,270,26,1,0,0,0,271,272,5,102,0,0,272,273,5,111,0,0,273,274,5,114,
		0,0,274,28,1,0,0,0,275,276,5,102,0,0,276,277,5,111,0,0,277,278,5,114,0,
		0,278,279,5,101,0,0,279,280,5,97,0,0,280,281,5,99,0,0,281,282,5,104,0,
		0,282,30,1,0,0,0,283,284,5,105,0,0,284,285,5,110,0,0,285,32,1,0,0,0,286,
		287,5,114,0,0,287,288,5,101,0,0,288,289,5,116,0,0,289,290,5,117,0,0,290,
		291,5,114,0,0,291,292,5,110,0,0,292,34,1,0,0,0,293,294,5,115,0,0,294,295,
		5,119,0,0,295,296,5,105,0,0,296,297,5,116,0,0,297,298,5,99,0,0,298,299,
		5,104,0,0,299,36,1,0,0,0,300,301,5,99,0,0,301,302,5,97,0,0,302,303,5,115,
		0,0,303,304,5,101,0,0,304,38,1,0,0,0,305,306,5,100,0,0,306,307,5,101,0,
		0,307,308,5,102,0,0,308,309,5,97,0,0,309,310,5,117,0,0,310,311,5,108,0,
		0,311,312,5,116,0,0,312,40,1,0,0,0,313,314,5,116,0,0,314,315,5,114,0,0,
		315,316,5,121,0,0,316,42,1,0,0,0,317,318,5,99,0,0,318,319,5,97,0,0,319,
		320,5,116,0,0,320,321,5,99,0,0,321,322,5,104,0,0,322,44,1,0,0,0,323,324,
		5,102,0,0,324,325,5,105,0,0,325,326,5,110,0,0,326,327,5,97,0,0,327,328,
		5,108,0,0,328,329,5,108,0,0,329,330,5,121,0,0,330,46,1,0,0,0,331,332,5,
		116,0,0,332,333,5,104,0,0,333,334,5,114,0,0,334,335,5,111,0,0,335,336,
		5,119,0,0,336,48,1,0,0,0,337,338,5,116,0,0,338,339,5,104,0,0,339,340,5,
		114,0,0,340,341,5,111,0,0,341,342,5,119,0,0,342,343,5,115,0,0,343,50,1,
		0,0,0,344,345,5,112,0,0,345,346,5,114,0,0,346,347,5,105,0,0,347,348,5,
		118,0,0,348,349,5,97,0,0,349,350,5,116,0,0,350,351,5,101,0,0,351,52,1,
		0,0,0,352,353,5,112,0,0,353,354,5,114,0,0,354,355,5,111,0,0,355,356,5,
		116,0,0,356,357,5,101,0,0,357,358,5,99,0,0,358,359,5,116,0,0,359,360,5,
		101,0,0,360,361,5,100,0,0,361,54,1,0,0,0,362,363,5,112,0,0,363,364,5,117,
		0,0,364,365,5,98,0,0,365,366,5,108,0,0,366,367,5,105,0,0,367,368,5,99,
		0,0,368,56,1,0,0,0,369,370,5,105,0,0,370,371,5,110,0,0,371,372,5,116,0,
		0,372,373,5,101,0,0,373,374,5,114,0,0,374,375,5,110,0,0,375,376,5,97,0,
		0,376,377,5,108,0,0,377,58,1,0,0,0,378,379,5,97,0,0,379,380,5,98,0,0,380,
		381,5,115,0,0,381,382,5,116,0,0,382,383,5,114,0,0,383,384,5,97,0,0,384,
		385,5,99,0,0,385,386,5,116,0,0,386,60,1,0,0,0,387,388,5,118,0,0,388,389,
		5,105,0,0,389,390,5,114,0,0,390,391,5,116,0,0,391,392,5,117,0,0,392,393,
		5,97,0,0,393,394,5,108,0,0,394,62,1,0,0,0,395,396,5,111,0,0,396,397,5,
		118,0,0,397,398,5,101,0,0,398,399,5,114,0,0,399,400,5,114,0,0,400,401,
		5,105,0,0,401,402,5,100,0,0,402,403,5,101,0,0,403,64,1,0,0,0,404,405,5,
		115,0,0,405,406,5,116,0,0,406,407,5,97,0,0,407,408,5,116,0,0,408,409,5,
		105,0,0,409,410,5,99,0,0,410,66,1,0,0,0,411,412,5,99,0,0,412,413,5,111,
		0,0,413,414,5,110,0,0,414,415,5,115,0,0,415,416,5,116,0,0,416,68,1,0,0,
		0,417,418,5,114,0,0,418,419,5,101,0,0,419,420,5,97,0,0,420,421,5,100,0,
		0,421,422,5,111,0,0,422,423,5,110,0,0,423,424,5,108,0,0,424,425,5,121,
		0,0,425,70,1,0,0,0,426,427,5,103,0,0,427,428,5,101,0,0,428,429,5,116,0,
		0,429,72,1,0,0,0,430,431,5,115,0,0,431,432,5,101,0,0,432,433,5,116,0,0,
		433,74,1,0,0,0,434,435,5,97,0,0,435,436,5,100,0,0,436,437,5,100,0,0,437,
		76,1,0,0,0,438,439,5,114,0,0,439,440,5,101,0,0,440,441,5,109,0,0,441,442,
		5,111,0,0,442,443,5,118,0,0,443,444,5,101,0,0,444,78,1,0,0,0,445,446,5,
		101,0,0,446,447,5,118,0,0,447,448,5,101,0,0,448,449,5,110,0,0,449,450,
		5,116,0,0,450,80,1,0,0,0,451,452,5,97,0,0,452,453,5,115,0,0,453,82,1,0,
		0,0,454,455,5,105,0,0,455,456,5,115,0,0,456,84,1,0,0,0,457,458,5,110,0,
		0,458,459,5,117,0,0,459,460,5,108,0,0,460,461,5,108,0,0,461,86,1,0,0,0,
		462,464,3,99,49,0,463,462,1,0,0,0,464,465,1,0,0,0,465,463,1,0,0,0,465,
		466,1,0,0,0,466,88,1,0,0,0,467,468,5,48,0,0,468,469,5,120,0,0,469,471,
		1,0,0,0,470,472,3,101,50,0,471,470,1,0,0,0,472,473,1,0,0,0,473,471,1,0,
		0,0,473,474,1,0,0,0,474,90,1,0,0,0,475,477,3,99,49,0,476,475,1,0,0,0,477,
		478,1,0,0,0,478,476,1,0,0,0,478,479,1,0,0,0,479,480,1,0,0,0,480,484,5,
		46,0,0,481,483,3,99,49,0,482,481,1,0,0,0,483,486,1,0,0,0,484,482,1,0,0,
		0,484,485,1,0,0,0,485,488,1,0,0,0,486,484,1,0,0,0,487,489,3,103,51,0,488,
		487,1,0,0,0,488,489,1,0,0,0,489,92,1,0,0,0,490,492,3,99,49,0,491,490,1,
		0,0,0,492,493,1,0,0,0,493,491,1,0,0,0,493,494,1,0,0,0,494,495,1,0,0,0,
		495,499,5,46,0,0,496,498,3,99,49,0,497,496,1,0,0,0,498,501,1,0,0,0,499,
		497,1,0,0,0,499,500,1,0,0,0,500,503,1,0,0,0,501,499,1,0,0,0,502,504,3,
		103,51,0,503,502,1,0,0,0,503,504,1,0,0,0,504,94,1,0,0,0,505,508,5,39,0,
		0,506,509,3,105,52,0,507,509,8,0,0,0,508,506,1,0,0,0,508,507,1,0,0,0,509,
		510,1,0,0,0,510,511,5,39,0,0,511,96,1,0,0,0,512,517,5,34,0,0,513,516,3,
		105,52,0,514,516,8,1,0,0,515,513,1,0,0,0,515,514,1,0,0,0,516,519,1,0,0,
		0,517,515,1,0,0,0,517,518,1,0,0,0,518,520,1,0,0,0,519,517,1,0,0,0,520,
		521,5,34,0,0,521,98,1,0,0,0,522,523,7,2,0,0,523,100,1,0,0,0,524,525,7,
		3,0,0,525,102,1,0,0,0,526,528,7,4,0,0,527,529,7,5,0,0,528,527,1,0,0,0,
		528,529,1,0,0,0,529,531,1,0,0,0,530,532,3,99,49,0,531,530,1,0,0,0,532,
		533,1,0,0,0,533,531,1,0,0,0,533,534,1,0,0,0,534,104,1,0,0,0,535,536,5,
		92,0,0,536,539,7,6,0,0,537,539,3,107,53,0,538,535,1,0,0,0,538,537,1,0,
		0,0,539,106,1,0,0,0,540,541,5,92,0,0,541,542,5,117,0,0,542,543,3,101,50,
		0,543,544,3,101,50,0,544,545,3,101,50,0,545,546,3,101,50,0,546,108,1,0,
		0,0,547,553,3,111,55,0,548,552,3,111,55,0,549,552,3,99,49,0,550,552,5,
		95,0,0,551,548,1,0,0,0,551,549,1,0,0,0,551,550,1,0,0,0,552,555,1,0,0,0,
		553,551,1,0,0,0,553,554,1,0,0,0,554,110,1,0,0,0,555,553,1,0,0,0,556,558,
		7,7,0,0,557,556,1,0,0,0,558,112,1,0,0,0,559,560,5,43,0,0,560,114,1,0,0,
		0,561,562,5,45,0,0,562,116,1,0,0,0,563,564,5,42,0,0,564,118,1,0,0,0,565,
		566,5,47,0,0,566,120,1,0,0,0,567,568,5,37,0,0,568,122,1,0,0,0,569,570,
		5,61,0,0,570,124,1,0,0,0,571,572,5,43,0,0,572,573,5,61,0,0,573,126,1,0,
		0,0,574,575,5,45,0,0,575,576,5,61,0,0,576,128,1,0,0,0,577,578,5,42,0,0,
		578,579,5,61,0,0,579,130,1,0,0,0,580,581,5,47,0,0,581,582,5,61,0,0,582,
		132,1,0,0,0,583,584,5,37,0,0,584,585,5,61,0,0,585,134,1,0,0,0,586,587,
		5,61,0,0,587,588,5,61,0,0,588,136,1,0,0,0,589,590,5,33,0,0,590,591,5,61,
		0,0,591,138,1,0,0,0,592,593,5,60,0,0,593,140,1,0,0,0,594,595,5,62,0,0,
		595,142,1,0,0,0,596,597,5,60,0,0,597,598,5,61,0,0,598,144,1,0,0,0,599,
		600,5,62,0,0,600,601,5,61,0,0,601,146,1,0,0,0,602,603,5,38,0,0,603,604,
		5,38,0,0,604,148,1,0,0,0,605,606,5,124,0,0,606,607,5,124,0,0,607,150,1,
		0,0,0,608,609,5,33,0,0,609,152,1,0,0,0,610,611,5,38,0,0,611,154,1,0,0,
		0,612,613,5,124,0,0,613,156,1,0,0,0,614,615,5,126,0,0,615,158,1,0,0,0,
		616,617,5,94,0,0,617,160,1,0,0,0,618,619,5,60,0,0,619,620,5,60,0,0,620,
		162,1,0,0,0,621,622,5,62,0,0,622,623,5,62,0,0,623,164,1,0,0,0,624,625,
		5,63,0,0,625,166,1,0,0,0,626,627,5,63,0,0,627,628,5,63,0,0,628,168,1,0,
		0,0,629,630,5,43,0,0,630,631,5,43,0,0,631,170,1,0,0,0,632,633,5,45,0,0,
		633,634,5,45,0,0,634,172,1,0,0,0,635,636,5,46,0,0,636,174,1,0,0,0,637,
		638,5,46,0,0,638,639,5,46,0,0,639,640,5,46,0,0,640,176,1,0,0,0,641,642,
		5,58,0,0,642,178,1,0,0,0,643,644,5,59,0,0,644,180,1,0,0,0,645,646,5,44,
		0,0,646,182,1,0,0,0,647,648,5,45,0,0,648,649,5,62,0,0,649,184,1,0,0,0,
		650,651,5,40,0,0,651,186,1,0,0,0,652,653,5,41,0,0,653,188,1,0,0,0,654,
		655,5,123,0,0,655,190,1,0,0,0,656,657,5,125,0,0,657,192,1,0,0,0,658,659,
		5,91,0,0,659,194,1,0,0,0,660,661,5,93,0,0,661,196,1,0,0,0,18,0,465,473,
		478,484,488,493,499,503,508,515,517,528,533,538,551,553,557,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace generated
