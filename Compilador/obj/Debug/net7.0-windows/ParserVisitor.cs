//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Proyecto Compi\ProyectoCompiladores\Compilador\Parser.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Compilador {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="ParserParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] ParserParser.ProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.usingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingClause([NotNull] ParserParser.UsingClauseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarDecl([NotNull] ParserParser.VarDeclContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDecl([NotNull] ParserParser.ClassDeclContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodDecl([NotNull] ParserParser.MethodDeclContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormPars([NotNull] ParserParser.FormParsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] ParserParser.TypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] ParserParser.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] ParserParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitActPars([NotNull] ParserParser.ActParsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondition([NotNull] ParserParser.ConditionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.condTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondTerm([NotNull] ParserParser.CondTermContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondFact([NotNull] ParserParser.CondFactContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.cast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCast([NotNull] ParserParser.CastContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] ParserParser.ExprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] ParserParser.TermContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] ParserParser.FactorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDesignator([NotNull] ParserParser.DesignatorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelop([NotNull] ParserParser.RelopContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddop([NotNull] ParserParser.AddopContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulop([NotNull] ParserParser.MulopContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] ParserParser.IdentifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="ParserParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArray([NotNull] ParserParser.ArrayContext context);
}
} // namespace Compilador
