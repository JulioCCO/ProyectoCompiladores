//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Proyecto Compi\ProyectoCompiladores\Compilador\Parser.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Compilador {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ParserParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] ParserParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] ParserParser.ProgramContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.usingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingClause([NotNull] ParserParser.UsingClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.usingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingClause([NotNull] ParserParser.UsingClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDecl([NotNull] ParserParser.VarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDecl([NotNull] ParserParser.VarDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDecl([NotNull] ParserParser.ClassDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDecl([NotNull] ParserParser.ClassDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDecl([NotNull] ParserParser.MethodDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDecl([NotNull] ParserParser.MethodDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormPars([NotNull] ParserParser.FormParsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormPars([NotNull] ParserParser.FormParsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] ParserParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] ParserParser.TypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] ParserParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] ParserParser.BlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] ParserParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] ParserParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActPars([NotNull] ParserParser.ActParsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActPars([NotNull] ParserParser.ActParsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] ParserParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] ParserParser.ConditionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.condTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondTerm([NotNull] ParserParser.CondTermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.condTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondTerm([NotNull] ParserParser.CondTermContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondFact([NotNull] ParserParser.CondFactContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondFact([NotNull] ParserParser.CondFactContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.cast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCast([NotNull] ParserParser.CastContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.cast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCast([NotNull] ParserParser.CastContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] ParserParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] ParserParser.ExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] ParserParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] ParserParser.TermContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] ParserParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] ParserParser.FactorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesignator([NotNull] ParserParser.DesignatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesignator([NotNull] ParserParser.DesignatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelop([NotNull] ParserParser.RelopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelop([NotNull] ParserParser.RelopContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddop([NotNull] ParserParser.AddopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddop([NotNull] ParserParser.AddopContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulop([NotNull] ParserParser.MulopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulop([NotNull] ParserParser.MulopContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] ParserParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] ParserParser.IdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray([NotNull] ParserParser.ArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray([NotNull] ParserParser.ArrayContext context);
}
} // namespace Compilador
