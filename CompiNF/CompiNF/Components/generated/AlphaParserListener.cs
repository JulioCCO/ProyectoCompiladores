//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:/Compi/CompiNetFramework/CompiNF/CompiNF/Components\AlphaParser.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace generated {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="AlphaParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public interface IAlphaParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>ProgramClassAST</c>
	/// labeled alternative in <see cref="AlphaParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgramClassAST([NotNull] AlphaParser.ProgramClassASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ProgramClassAST</c>
	/// labeled alternative in <see cref="AlphaParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgramClassAST([NotNull] AlphaParser.ProgramClassASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UsingClassAST</c>
	/// labeled alternative in <see cref="AlphaParser.using"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingClassAST([NotNull] AlphaParser.UsingClassASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UsingClassAST</c>
	/// labeled alternative in <see cref="AlphaParser.using"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingClassAST([NotNull] AlphaParser.UsingClassASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarDeclAST</c>
	/// labeled alternative in <see cref="AlphaParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDeclAST([NotNull] AlphaParser.VarDeclASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarDeclAST</c>
	/// labeled alternative in <see cref="AlphaParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDeclAST([NotNull] AlphaParser.VarDeclASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ClassDeclAST</c>
	/// labeled alternative in <see cref="AlphaParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDeclAST([NotNull] AlphaParser.ClassDeclASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ClassDeclAST</c>
	/// labeled alternative in <see cref="AlphaParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDeclAST([NotNull] AlphaParser.ClassDeclASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MethodDeclAST</c>
	/// labeled alternative in <see cref="AlphaParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDeclAST([NotNull] AlphaParser.MethodDeclASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MethodDeclAST</c>
	/// labeled alternative in <see cref="AlphaParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDeclAST([NotNull] AlphaParser.MethodDeclASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FormParsAST</c>
	/// labeled alternative in <see cref="AlphaParser.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormParsAST([NotNull] AlphaParser.FormParsASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FormParsAST</c>
	/// labeled alternative in <see cref="AlphaParser.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormParsAST([NotNull] AlphaParser.FormParsASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeAST</c>
	/// labeled alternative in <see cref="AlphaParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeAST([NotNull] AlphaParser.TypeASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeAST</c>
	/// labeled alternative in <see cref="AlphaParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeAST([NotNull] AlphaParser.TypeASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AssignStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStatementAST([NotNull] AlphaParser.AssignStatementASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStatementAST([NotNull] AlphaParser.AssignStatementASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IfStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatementAST([NotNull] AlphaParser.IfStatementASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IfStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatementAST([NotNull] AlphaParser.IfStatementASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ForStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatementAST([NotNull] AlphaParser.ForStatementASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ForStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatementAST([NotNull] AlphaParser.ForStatementASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>WhileStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatementAST([NotNull] AlphaParser.WhileStatementASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>WhileStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatementAST([NotNull] AlphaParser.WhileStatementASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BreakStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStatementAST([NotNull] AlphaParser.BreakStatementASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BreakStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStatementAST([NotNull] AlphaParser.BreakStatementASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ReturnStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatementAST([NotNull] AlphaParser.ReturnStatementASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ReturnStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatementAST([NotNull] AlphaParser.ReturnStatementASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ReadStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReadStatementAST([NotNull] AlphaParser.ReadStatementASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ReadStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReadStatementAST([NotNull] AlphaParser.ReadStatementASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>WriteStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWriteStatementAST([NotNull] AlphaParser.WriteStatementASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>WriteStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWriteStatementAST([NotNull] AlphaParser.WriteStatementASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BlockStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockStatementAST([NotNull] AlphaParser.BlockStatementASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BlockStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockStatementAST([NotNull] AlphaParser.BlockStatementASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SemicolonStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSemicolonStatementAST([NotNull] AlphaParser.SemicolonStatementASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SemicolonStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSemicolonStatementAST([NotNull] AlphaParser.SemicolonStatementASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BlockAST</c>
	/// labeled alternative in <see cref="AlphaParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockAST([NotNull] AlphaParser.BlockASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BlockAST</c>
	/// labeled alternative in <see cref="AlphaParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockAST([NotNull] AlphaParser.BlockASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ActParsAST</c>
	/// labeled alternative in <see cref="AlphaParser.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActParsAST([NotNull] AlphaParser.ActParsASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ActParsAST</c>
	/// labeled alternative in <see cref="AlphaParser.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActParsAST([NotNull] AlphaParser.ActParsASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ConditionAST</c>
	/// labeled alternative in <see cref="AlphaParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionAST([NotNull] AlphaParser.ConditionASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConditionAST</c>
	/// labeled alternative in <see cref="AlphaParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionAST([NotNull] AlphaParser.ConditionASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CondTermAST</c>
	/// labeled alternative in <see cref="AlphaParser.condTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondTermAST([NotNull] AlphaParser.CondTermASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CondTermAST</c>
	/// labeled alternative in <see cref="AlphaParser.condTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondTermAST([NotNull] AlphaParser.CondTermASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CondFactAST</c>
	/// labeled alternative in <see cref="AlphaParser.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondFactAST([NotNull] AlphaParser.CondFactASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CondFactAST</c>
	/// labeled alternative in <see cref="AlphaParser.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondFactAST([NotNull] AlphaParser.CondFactASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CastAST</c>
	/// labeled alternative in <see cref="AlphaParser.cast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCastAST([NotNull] AlphaParser.CastASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CastAST</c>
	/// labeled alternative in <see cref="AlphaParser.cast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCastAST([NotNull] AlphaParser.CastASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprAST</c>
	/// labeled alternative in <see cref="AlphaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprAST([NotNull] AlphaParser.ExprASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprAST</c>
	/// labeled alternative in <see cref="AlphaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprAST([NotNull] AlphaParser.ExprASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TermAST</c>
	/// labeled alternative in <see cref="AlphaParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTermAST([NotNull] AlphaParser.TermASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TermAST</c>
	/// labeled alternative in <see cref="AlphaParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTermAST([NotNull] AlphaParser.TermASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DesignatorFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesignatorFactorAST([NotNull] AlphaParser.DesignatorFactorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DesignatorFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesignatorFactorAST([NotNull] AlphaParser.DesignatorFactorASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CharFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharFactorAST([NotNull] AlphaParser.CharFactorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CharFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharFactorAST([NotNull] AlphaParser.CharFactorASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StringFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringFactorAST([NotNull] AlphaParser.StringFactorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StringFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringFactorAST([NotNull] AlphaParser.StringFactorASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IntFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntFactorAST([NotNull] AlphaParser.IntFactorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IntFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntFactorAST([NotNull] AlphaParser.IntFactorASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DoubleFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoubleFactorAST([NotNull] AlphaParser.DoubleFactorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DoubleFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoubleFactorAST([NotNull] AlphaParser.DoubleFactorASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BoolFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolFactorAST([NotNull] AlphaParser.BoolFactorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BoolFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolFactorAST([NotNull] AlphaParser.BoolFactorASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NewFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewFactorAST([NotNull] AlphaParser.NewFactorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NewFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewFactorAST([NotNull] AlphaParser.NewFactorASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenFactorAST([NotNull] AlphaParser.ParenFactorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenFactorAST([NotNull] AlphaParser.ParenFactorASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DesignatorAST</c>
	/// labeled alternative in <see cref="AlphaParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesignatorAST([NotNull] AlphaParser.DesignatorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DesignatorAST</c>
	/// labeled alternative in <see cref="AlphaParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesignatorAST([NotNull] AlphaParser.DesignatorASTContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelop([NotNull] AlphaParser.RelopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelop([NotNull] AlphaParser.RelopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddop([NotNull] AlphaParser.AddopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddop([NotNull] AlphaParser.AddopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulop([NotNull] AlphaParser.MulopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulop([NotNull] AlphaParser.MulopContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IdentAST</c>
	/// labeled alternative in <see cref="AlphaParser.ident"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentAST([NotNull] AlphaParser.IdentASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IdentAST</c>
	/// labeled alternative in <see cref="AlphaParser.ident"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentAST([NotNull] AlphaParser.IdentASTContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ArrayAST</c>
	/// labeled alternative in <see cref="AlphaParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayAST([NotNull] AlphaParser.ArrayASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrayAST</c>
	/// labeled alternative in <see cref="AlphaParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayAST([NotNull] AlphaParser.ArrayASTContext context);
}
} // namespace generated
