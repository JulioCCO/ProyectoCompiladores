//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:/Compi/Compilador/CompiNF/CompiNF/Components\AlphaParser.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace generated {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IAlphaParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class AlphaParserBaseListener : IAlphaParserListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>ProgramClassAST</c>
	/// labeled alternative in <see cref="AlphaParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgramClassAST([NotNull] AlphaParser.ProgramClassASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ProgramClassAST</c>
	/// labeled alternative in <see cref="AlphaParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgramClassAST([NotNull] AlphaParser.ProgramClassASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UsingClassAST</c>
	/// labeled alternative in <see cref="AlphaParser.using"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingClassAST([NotNull] AlphaParser.UsingClassASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UsingClassAST</c>
	/// labeled alternative in <see cref="AlphaParser.using"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingClassAST([NotNull] AlphaParser.UsingClassASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarDeclAST</c>
	/// labeled alternative in <see cref="AlphaParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDeclAST([NotNull] AlphaParser.VarDeclASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarDeclAST</c>
	/// labeled alternative in <see cref="AlphaParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDeclAST([NotNull] AlphaParser.VarDeclASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ClassDeclAST</c>
	/// labeled alternative in <see cref="AlphaParser.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDeclAST([NotNull] AlphaParser.ClassDeclASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ClassDeclAST</c>
	/// labeled alternative in <see cref="AlphaParser.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDeclAST([NotNull] AlphaParser.ClassDeclASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MethodDeclAST</c>
	/// labeled alternative in <see cref="AlphaParser.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDeclAST([NotNull] AlphaParser.MethodDeclASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MethodDeclAST</c>
	/// labeled alternative in <see cref="AlphaParser.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDeclAST([NotNull] AlphaParser.MethodDeclASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FormParsAST</c>
	/// labeled alternative in <see cref="AlphaParser.formPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormParsAST([NotNull] AlphaParser.FormParsASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FormParsAST</c>
	/// labeled alternative in <see cref="AlphaParser.formPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormParsAST([NotNull] AlphaParser.FormParsASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeAST</c>
	/// labeled alternative in <see cref="AlphaParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeAST([NotNull] AlphaParser.TypeASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeAST</c>
	/// labeled alternative in <see cref="AlphaParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeAST([NotNull] AlphaParser.TypeASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AssignStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignStatementAST([NotNull] AlphaParser.AssignStatementASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignStatementAST([NotNull] AlphaParser.AssignStatementASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IfStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatementAST([NotNull] AlphaParser.IfStatementASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IfStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatementAST([NotNull] AlphaParser.IfStatementASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ForStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatementAST([NotNull] AlphaParser.ForStatementASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ForStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatementAST([NotNull] AlphaParser.ForStatementASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>WhileStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatementAST([NotNull] AlphaParser.WhileStatementASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>WhileStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatementAST([NotNull] AlphaParser.WhileStatementASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BreakStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatementAST([NotNull] AlphaParser.BreakStatementASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BreakStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatementAST([NotNull] AlphaParser.BreakStatementASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ReturnStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatementAST([NotNull] AlphaParser.ReturnStatementASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ReturnStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatementAST([NotNull] AlphaParser.ReturnStatementASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ReadStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReadStatementAST([NotNull] AlphaParser.ReadStatementASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ReadStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReadStatementAST([NotNull] AlphaParser.ReadStatementASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>WriteStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWriteStatementAST([NotNull] AlphaParser.WriteStatementASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>WriteStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWriteStatementAST([NotNull] AlphaParser.WriteStatementASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BlockStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockStatementAST([NotNull] AlphaParser.BlockStatementASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BlockStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockStatementAST([NotNull] AlphaParser.BlockStatementASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SemicolonStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSemicolonStatementAST([NotNull] AlphaParser.SemicolonStatementASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SemicolonStatementAST</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSemicolonStatementAST([NotNull] AlphaParser.SemicolonStatementASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BlockAST</c>
	/// labeled alternative in <see cref="AlphaParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockAST([NotNull] AlphaParser.BlockASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BlockAST</c>
	/// labeled alternative in <see cref="AlphaParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockAST([NotNull] AlphaParser.BlockASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ActParsAST</c>
	/// labeled alternative in <see cref="AlphaParser.actPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterActParsAST([NotNull] AlphaParser.ActParsASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ActParsAST</c>
	/// labeled alternative in <see cref="AlphaParser.actPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitActParsAST([NotNull] AlphaParser.ActParsASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ConditionAST</c>
	/// labeled alternative in <see cref="AlphaParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionAST([NotNull] AlphaParser.ConditionASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ConditionAST</c>
	/// labeled alternative in <see cref="AlphaParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionAST([NotNull] AlphaParser.ConditionASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CondTermAST</c>
	/// labeled alternative in <see cref="AlphaParser.condTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondTermAST([NotNull] AlphaParser.CondTermASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CondTermAST</c>
	/// labeled alternative in <see cref="AlphaParser.condTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondTermAST([NotNull] AlphaParser.CondTermASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CondFactAST</c>
	/// labeled alternative in <see cref="AlphaParser.condFact"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondFactAST([NotNull] AlphaParser.CondFactASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CondFactAST</c>
	/// labeled alternative in <see cref="AlphaParser.condFact"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondFactAST([NotNull] AlphaParser.CondFactASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CastAST</c>
	/// labeled alternative in <see cref="AlphaParser.cast"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCastAST([NotNull] AlphaParser.CastASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CastAST</c>
	/// labeled alternative in <see cref="AlphaParser.cast"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCastAST([NotNull] AlphaParser.CastASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprAST</c>
	/// labeled alternative in <see cref="AlphaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprAST([NotNull] AlphaParser.ExprASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprAST</c>
	/// labeled alternative in <see cref="AlphaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprAST([NotNull] AlphaParser.ExprASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TermAST</c>
	/// labeled alternative in <see cref="AlphaParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTermAST([NotNull] AlphaParser.TermASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TermAST</c>
	/// labeled alternative in <see cref="AlphaParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTermAST([NotNull] AlphaParser.TermASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DesignatorFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDesignatorFactorAST([NotNull] AlphaParser.DesignatorFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DesignatorFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDesignatorFactorAST([NotNull] AlphaParser.DesignatorFactorASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CharFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharFactorAST([NotNull] AlphaParser.CharFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CharFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharFactorAST([NotNull] AlphaParser.CharFactorASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>StringFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringFactorAST([NotNull] AlphaParser.StringFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StringFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringFactorAST([NotNull] AlphaParser.StringFactorASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IntFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntFactorAST([NotNull] AlphaParser.IntFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IntFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntFactorAST([NotNull] AlphaParser.IntFactorASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DoubleFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoubleFactorAST([NotNull] AlphaParser.DoubleFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DoubleFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoubleFactorAST([NotNull] AlphaParser.DoubleFactorASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BoolFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolFactorAST([NotNull] AlphaParser.BoolFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BoolFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolFactorAST([NotNull] AlphaParser.BoolFactorASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NewFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewFactorAST([NotNull] AlphaParser.NewFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NewFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewFactorAST([NotNull] AlphaParser.NewFactorASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenFactorAST([NotNull] AlphaParser.ParenFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenFactorAST</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenFactorAST([NotNull] AlphaParser.ParenFactorASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DesignatorAST</c>
	/// labeled alternative in <see cref="AlphaParser.designator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDesignatorAST([NotNull] AlphaParser.DesignatorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DesignatorAST</c>
	/// labeled alternative in <see cref="AlphaParser.designator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDesignatorAST([NotNull] AlphaParser.DesignatorASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelop([NotNull] AlphaParser.RelopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelop([NotNull] AlphaParser.RelopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.addop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddop([NotNull] AlphaParser.AddopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.addop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddop([NotNull] AlphaParser.AddopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.mulop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulop([NotNull] AlphaParser.MulopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.mulop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulop([NotNull] AlphaParser.MulopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IdentAST</c>
	/// labeled alternative in <see cref="AlphaParser.ident"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentAST([NotNull] AlphaParser.IdentASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IdentAST</c>
	/// labeled alternative in <see cref="AlphaParser.ident"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentAST([NotNull] AlphaParser.IdentASTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ArrayAST</c>
	/// labeled alternative in <see cref="AlphaParser.array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayAST([NotNull] AlphaParser.ArrayASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrayAST</c>
	/// labeled alternative in <see cref="AlphaParser.array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayAST([NotNull] AlphaParser.ArrayASTContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace generated
